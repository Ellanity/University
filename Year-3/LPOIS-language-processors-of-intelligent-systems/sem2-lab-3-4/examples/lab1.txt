Написать 3 примера фрагментов кода языка по варианту, все свойства 
должны быть использованы, встроенные типы, операции и функции должны 
быть использованы и показаны на примерах. 

Требования к разрабатываемому языку
1. Встроенные типы не менее трех
2. Возможность инициализация переменных всех типов при объявлении: <тип> <имя_переменной> = <выражение>. Инициализирующее выражение может быть константным
3. Встроенные операции не менее 10 штук
4. Встроенные функции. Встроенные функции ввода\вывода для работы со встроенными типами read() write()
5. Использование сложных выражений (составных и со скобками)
6. Блочный оператор
7. Управляющие структуры - Условный оператор (if-then-else), Операторы цикла (while и until), Оператор цикла с итерациями (for)
8. Пользовательские подпрограммы - Передача и возврат параметров, Задание локальной и глобальной области видимости для имен переменных

Вриант 14
Язык для работы со строками (Viola language)
1. Встроенные типы: char, string, массив string //, int
2. Операции: переопределить +, -, *, /, [] и т.д. для встроенных типов
3. Встроенные функции поиска подстроки, извлечения среза, разбиение, замена по шаблону

Варианты целевого кода: Байт-код .NET, формат промежуточного кода ассемблер для .NET (CIL)

Дополнительные требования:
,-------------------------------,---------------------------------------,
|1. Объявление переменных 		| Не явное								|
|-------------------------------+---------------------------------------|
|2. Преобразование типов 		| Явное, например, a = (int) b			|
|-------------------------------+---------------------------------------|
|3. Оператор присваивания 		| Многоцелевой, например, a, b = c, d	|
|-------------------------------+---------------------------------------|
|4. Структуры, ограничивающие 	| Подпрограммы и блочные операторы		|
|область видимости 				| 										|
|-------------------------------+---------------------------------------|
|5. Маркер блочного оператора 	| Не явный, например как в python		|
|-------------------------------+---------------------------------------|
|6. Условные операторы 			| Двух вариантный оператор if-then-else	|
|-------------------------------+---------------------------------------|
|7. Перегрузка подпрограмм 		| Присутствует							|
|-------------------------------+---------------------------------------|
|8. Передача параметров 		| По значению и результату				|
|в подпрограмму 				| 										|
|-------------------------------+---------------------------------------|
|9. Допустимое место 			| В начале программы					|
|объявления подпрограмм 		| 										|
`-------------------------------`---------------------------------------`


1. Структура объявления подпрограммы: 
[subr name(string input, ref startIndex) -> return_type:]
где subr - ключевое слово для объявления подпрограммы, 
name - название подпрограммы,  
string - ключевое слово для передачи переменной по значению, 
ref - ключевое слово для передачи по ссылке, 
return_type - тип переменной возвращаемый из подпрограммы (void, string  и тп)
2. структура условного оператора 
if(condition):
   ...
else:
    ...
3. Функция вывода текста [write("text")]
4. Пример цикла for [for (int i=0; i<N; i++):]
5. Комментарий при помощи //
6. Маркер блочного оператора как в питоне [tab]